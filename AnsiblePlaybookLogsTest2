ansible-playbook [core 2.12.6]
  config file = None
  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.8/dist-packages/ansible
  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections
  executable location = /usr/local/bin/ansible-playbook
  python version = 3.8.10 (default, Mar 15 2022, 12:22:08) [GCC 9.4.0]
  jinja version = 3.1.2
  libyaml = True
No config file found; using defaults
setting up inventory plugins
host_list declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
script declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
auto declined parsing /etc/ansible/hosts as it did not pass its verify_file() method
Set default localhost to localhost
Parsed /etc/ansible/hosts inventory source with ini plugin
redirecting (type: modules) ansible.builtin.npm to community.general.npm
Loading collection community.general from /usr/local/lib/python3.8/dist-packages/ansible_collections/community/general
Loading callback plugin default of type stdout, v2.0 from /usr/local/lib/python3.8/dist-packages/ansible/plugins/callback/default.py
Skipping callback 'default', as we already have a stdout callback.
Skipping callback 'minimal', as we already have a stdout callback.
Skipping callback 'oneline', as we already have a stdout callback.

PLAYBOOK: site.yaml ************************************************************
Positional arguments: platforms/shared/configuration/site.yaml
verbosity: 4
connection: smart
timeout: 10
become_method: sudo
tags: ('all',)
inventory: ('/etc/ansible/hosts',)
extra_vars: ('@/home/bevel/build/network.yaml',)
forks: 5
17 plays in platforms/shared/configuration/site.yaml

PLAY [all] *********************************************************************
META: ran handlers
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:12
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385 `" && echo ansible-tmp-1666395463.6281228-1767-31063450796385="` echo /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385 `" ) && sleep 0'
<localhost> Attempting python interpreter discovery
<localhost> EXEC /bin/sh -c 'echo PLATFORM; uname; echo FOUND; command -v '"'"'python3.10'"'"'; command -v '"'"'python3.9'"'"'; command -v '"'"'python3.8'"'"'; command -v '"'"'python3.7'"'"'; command -v '"'"'python3.6'"'"'; command -v '"'"'python3.5'"'"'; command -v '"'"'/usr/bin/python3'"'"'; command -v '"'"'/usr/libexec/platform-python'"'"'; command -v '"'"'python2.7'"'"'; command -v '"'"'python2.6'"'"'; command -v '"'"'/usr/bin/python'"'"'; command -v '"'"'python'"'"'; echo ENDFOUND && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3.8 && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpa2jx3pqa TO /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385/ /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395463.6281228-1767-31063450796385/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [install ajv-cli] *********************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810 `" && echo ansible-tmp-1666395464.6857486-1815-170790700946810="` echo /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.npm to community.general.npm
Using module file /usr/local/lib/python3.8/dist-packages/ansible_collections/community/general/plugins/modules/npm.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpedyx4nrn TO /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810/AnsiballZ_npm.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810/ /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810/AnsiballZ_npm.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810/AnsiballZ_npm.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395464.6857486-1815-170790700946810/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "ci": false,
            "executable": null,
            "global": true,
            "ignore_scripts": false,
            "name": "ajv-cli",
            "no_bin_links": false,
            "no_optional": false,
            "path": null,
            "production": false,
            "registry": null,
            "state": "present",
            "unsafe_perm": false,
            "version": null
        }
    }
}

TASK [set_fact] ****************************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:22
ok: [localhost] => {
    "ansible_facts": {
        "tempNetworkyaml": {
            "network": {
                "docker": {
                    "url": "ghcr.io/hyperledger"
                },
                "env": {
                    "ambassadorPorts": {
                        "portRange": {
                            "from": 15010,
                            "to": 15020
                        }
                    },
                    "external_dns": "disabled",
                    "proxy": "none",
                    "retry_count": 20,
                    "type": "local"
                },
                "frontend": "enabled",
                "network_services": [
                    {
                        "certificate": "/home/bevel/platforms/r3-corda/configuration/build/corda/doorman/tls/ambassador.crt",
                        "service": null,
                        "type": "doorman",
                        "uri": "http://192.168.49.2:30030"
                    },
                    {
                        "certificate": "/home/bevel/platforms/r3-corda/configuration/build/corda/networkmap/tls/ambassador.crt",
                        "service": null,
                        "type": "networkmap",
                        "uri": "http://192.168.49.2:30040"
                    }
                ],
                "organizations": [
                    {
                        "cloud_provider": "minikube",
                        "country": "UK",
                        "external_url_suffix": "develop.local.com",
                        "gitops": {
                            "branch": "test2",
                            "chart_source": "platforms/r3-corda/charts",
                            "email": "git@email.com",
                            "git_protocol": "ssh",
                            "git_repo": "github.com/SynthNetics/bevel.git",
                            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
                            "password": "git_access_token",
                            "private_key": "/home/bevel/build/gitops",
                            "release_dir": "platforms/r3-corda/releases/dev",
                            "username": "SynthNetics"
                        },
                        "k8s": {
                            "config_file": "/home/bevel/build/config",
                            "context": "minikube"
                        },
                        "location": "London",
                        "name": "supplychain",
                        "organization": null,
                        "services": {
                            "doorman": {
                                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                                "name": "doorman",
                                "ports": {
                                    "nodePort": 30030,
                                    "servicePort": 8080,
                                    "targetPort": 8080
                                },
                                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                                "tls": "on",
                                "type": "doorman"
                            },
                            "nms": {
                                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                                "name": "networkmap",
                                "ports": {
                                    "nodePort": 30040,
                                    "servicePort": 8080,
                                    "targetPort": 8080
                                },
                                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                                "tls": "on",
                                "type": "networkmap"
                            },
                            "notary": {
                                "dbtcp": {
                                    "port": 9101,
                                    "targetPort": 1521
                                },
                                "dbweb": {
                                    "port": 8080,
                                    "targetPort": 81
                                },
                                "name": "notary",
                                "p2p": {
                                    "ambassador": 15010,
                                    "port": 10002,
                                    "targetPort": 10002
                                },
                                "rpc": {
                                    "port": 10003,
                                    "targetPort": 10003
                                },
                                "rpcadmin": {
                                    "port": 10005,
                                    "targetPort": 10005
                                },
                                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                                "type": "notary",
                                "validating": false
                            }
                        },
                        "state": "London",
                        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
                        "type": "doorman-nms-notary",
                        "vault": {
                            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
                            "url": "http://192.168.1.21:8217"
                        }
                    },
                    {
                        "cloud_provider": "minikube",
                        "country": "CH",
                        "external_url_suffix": "develop.local.com",
                        "gitops": {
                            "branch": "local",
                            "chart_source": "platforms/r3-corda/charts",
                            "email": "git@email.com",
                            "git_protocol": "ssh",
                            "git_repo": "github.com/SynthNetics/bevel.git",
                            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
                            "password": "git_access_token",
                            "private_key": "/home/bevel/build/gitops",
                            "release_dir": "platforms/r3-corda/releases/dev",
                            "username": "SynthNetics"
                        },
                        "k8s": {
                            "config_file": "/home/bevel/build/config",
                            "context": "minikube"
                        },
                        "location": "Zurich",
                        "name": "manufacturer",
                        "organization": null,
                        "services": {
                            "peers": [
                                {
                                    "dbtcp": {
                                        "port": 9101,
                                        "targetPort": 1521
                                    },
                                    "dbweb": {
                                        "port": 8080,
                                        "targetPort": 81
                                    },
                                    "expressapi": {
                                        "port": 3000,
                                        "targetPort": 3000
                                    },
                                    "name": "manufacturer",
                                    "p2p": {
                                        "ambassador": 15020,
                                        "port": 10002,
                                        "targetPort": 10002
                                    },
                                    "peer": null,
                                    "rpc": {
                                        "port": 10003,
                                        "targetPort": 10003
                                    },
                                    "rpcadmin": {
                                        "port": 10005,
                                        "targetPort": 10005
                                    },
                                    "springboot": {
                                        "port": 20001,
                                        "targetPort": 20001
                                    },
                                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                                    "type": "node"
                                }
                            ]
                        },
                        "state": "Zurich",
                        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
                        "type": "node",
                        "vault": {
                            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
                            "url": "http://192.168.1.21:8217"
                        }
                    }
                ],
                "type": "corda",
                "version": 4.4
            }
        }
    },
    "changed": false
}

TASK [Ensures build dir exists] ************************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:24
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
Loading collection kubernetes.core from /usr/local/lib/python3.8/dist-packages/ansible_collections/kubernetes/core
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [check/setup : check if dir exists or not] ********************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167 `" && echo ansible-tmp-1666395465.9917111-1856-260631063136167="` echo /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp0x7dus1g TO /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167/ /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395465.9917111-1856-260631063136167/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "./build"
        }
    },
    "stat": {
        "exists": false
    }
}

TASK [check/setup : Ensures dir exists] ****************************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:17
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241 `" && echo ansible-tmp-1666395466.2812293-1882-1043235241241="` echo /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpq9ppvxaj TO /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241/ /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395466.2812293-1882-1043235241241/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "directory"
        },
        "before": {
            "path": "./build",
            "state": "absent"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": "0755",
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": true,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "./build",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [check/setup : Check if Kubernetes-auth already created for Organization] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/setup : Check if policy exists] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:36
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/setup : Check docker cred exists] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:47
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/setup : Check git https cred exists] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:58
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [check/setup : check if certs exists in vault.] ***************************
task path: /home/bevel/platforms/shared/configuration/roles/check/setup/tasks/main.yaml:69
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: role_complete for localhost

TASK [create tempNetwork yaml file] ********************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:30
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437 `" && echo ansible-tmp-1666395466.7503242-1918-187641424462437="` echo /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpikrob1cn TO /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/ /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/AnsiballZ_stat.py && sleep 0'
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpsm4rl9pg TO /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/source
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/ /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/source && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/copy.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp94tt7bgw TO /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/AnsiballZ_copy.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/ /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/AnsiballZ_copy.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "checksum": "9590c49e3d33ca100663afd74302578ae893b9ca",
    "dest": "./build/temp.yaml",
    "diff": [],
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_original_basename": "tmpsm4rl9pg",
            "attributes": null,
            "backup": false,
            "checksum": "9590c49e3d33ca100663afd74302578ae893b9ca",
            "content": null,
            "dest": "./build/temp.yaml",
            "directory_mode": null,
            "follow": false,
            "force": true,
            "group": null,
            "local_follow": null,
            "mode": null,
            "owner": null,
            "remote_src": null,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": "/root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/source",
            "unsafe_writes": false,
            "validate": null
        }
    },
    "md5sum": "448d5c791f413649156be6531ea360ae",
    "mode": "0644",
    "owner": "root",
    "size": 5076,
    "src": "/root/.ansible/tmp/ansible-tmp-1666395466.7503242-1918-187641424462437/source",
    "state": "file",
    "uid": 0
}

TASK [run schema validator on network.yaml] ************************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:35
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377 `" && echo ansible-tmp-1666395467.239345-1957-272662351874377="` echo /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpa1ioa556 TO /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377/ /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395467.239345-1957-272662351874377/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "ajv validate -s /home/bevel/platforms/shared/configuration/../../network-schema.json -d ./build/temp.yaml\n",
    "delta": "0:00:00.922995",
    "end": "2022-10-21 23:37:48.427285",
    "invocation": {
        "module_args": {
            "_raw_params": "ajv validate -s /home/bevel/platforms/shared/configuration/../../network-schema.json -d ./build/temp.yaml\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:47.504290",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "./build/temp.yaml valid",
    "stdout_lines": [
        "./build/temp.yaml valid"
    ]
}

TASK [Remove the build directory and contents] *********************************
task path: /home/bevel/platforms/shared/configuration/network-schema-validator.yaml:38
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948 `" && echo ansible-tmp-1666395468.4805045-1991-192310819141948="` echo /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpyixl_p0r TO /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948/ /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395468.4805045-1991-192310819141948/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "absent"
        },
        "before": {
            "path": "./build",
            "path_content": {
                "directories": [],
                "files": [
                    "./build/temp.yaml"
                ]
            },
            "state": "directory"
        }
    },
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************

TASK [Gathering Facts] *********************************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597 `" && echo ansible-tmp-1666395468.703069-2018-11724246777597="` echo /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/setup.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpzy0sxzm8 TO /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597/AnsiballZ_setup.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597/ /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597/AnsiballZ_setup.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395468.703069-2018-11724246777597/ > /dev/null 2>&1 && sleep 0'
ok: [localhost]
META: ran handlers

TASK [include_role : setup/kubectl] ********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:17

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751 `" && echo ansible-tmp-1666395469.3448412-2060-10933312773751="` echo /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpxxc1mv_h TO /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751/ /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395469.3448412-2060-10933312773751/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.2ye8e9io",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545 `" && echo ansible-tmp-1666395469.6633012-2086-237780873387545="` echo /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp660bjrsg TO /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545/ /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395469.6633012-2086-237780873387545/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1666395323.52441,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 83960,
        "charset": "unknown",
        "checksum": "371d59fce375bd7d74256c136280eeef732d7611",
        "ctime": 1666395323.3054097,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360682,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1613566452.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 42987520,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584 `" && echo ansible-tmp-1666395470.086686-2121-229686188211584="` echo /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpkcg1poyx TO /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584/ /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395470.086686-2121-229686188211584/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.049685",
    "end": "2022-10-21 23:37:50.274038",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:50.224353",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.8",
    "stdout_lines": [
        "Client Version: v1.19.8"
    ]
}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620 `" && echo ansible-tmp-1666395470.3416088-2154-6762118392620="` echo /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp03nddhel TO /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620/ /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395470.3416088-2154-6762118392620/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context minikube\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n",
    "delta": "0:00:00.113467",
    "end": "2022-10-21 23:37:50.597035",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/home/bevel/build/config kubectl config use-context minikube\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:50.483568",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Switched to context \"minikube\".\nContext \"minikube\" modified.",
    "stdout_lines": [
        "Switched to context \"minikube\".",
        "Context \"minikube\" modified."
    ]
}
META: role_complete for localhost

TASK [setup/kubectl : register temporary directory] ****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019 `" && echo ansible-tmp-1666395470.670171-2196-30690342281019="` echo /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpd6dagglu TO /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019/ /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395470.670171-2196-30690342281019/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.d8ibmczj",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [setup/kubectl : check kubectl] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419 `" && echo ansible-tmp-1666395470.8724766-2222-148628782792419="` echo /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpcnww21ut TO /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419/ /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395470.8724766-2222-148628782792419/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1666395323.52441,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 83960,
        "charset": "unknown",
        "checksum": "371d59fce375bd7d74256c136280eeef732d7611",
        "ctime": 1666395323.3054097,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360682,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1613566452.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 42987520,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/kubectl : Download kubectl binary] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Unarchive kubernetes-client] *****************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : create bin directory] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Copy kubectl binary to destination directory] ************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/kubectl : Test kubectl installation] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398 `" && echo ansible-tmp-1666395471.3280823-2257-58523163098398="` echo /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp0j6vwj7o TO /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398/ /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395471.3280823-2257-58523163098398/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.051734",
    "end": "2022-10-21 23:37:51.533743",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:51.482009",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.8",
    "stdout_lines": [
        "Client Version: v1.19.8"
    ]
}

TASK [setup/kubectl : Changing the current context namespace to default] *******
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881 `" && echo ansible-tmp-1666395471.6032715-2290-60260909259881="` echo /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp13q8tdd1 TO /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881/ /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395471.6032715-2290-60260909259881/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context minikube\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n",
    "delta": "0:00:00.102719",
    "end": "2022-10-21 23:37:51.847257",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/home/bevel/build/config kubectl config use-context minikube\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:51.744538",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Switched to context \"minikube\".\nContext \"minikube\" modified.",
    "stdout_lines": [
        "Switched to context \"minikube\".",
        "Context \"minikube\" modified."
    ]
}
META: role_complete for localhost

TASK [include_role : setup/helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:25

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477 `" && echo ansible-tmp-1666395472.0044737-2332-232404728621477="` echo /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp4hvky9ix TO /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477/ /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395472.0044737-2332-232404728621477/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.a69xxkdq",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667 `" && echo ansible-tmp-1666395472.2251613-2358-249878755286667="` echo /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp1_cm_edm TO /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667/ /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395472.2251613-2358-249878755286667/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1666395330.525418,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 88104,
        "charset": "unknown",
        "checksum": "4ef98189af928450906546c6afd8719399a4c181",
        "ctime": 1666395330.3114178,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360773,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1666395330.0304174,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 45109248,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900 `" && echo ansible-tmp-1666395472.673489-2393-181828294595900="` echo /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpllfi1qh9 TO /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900/ /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395472.673489-2393-181828294595900/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.040461",
    "end": "2022-10-21 23:37:52.854014",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:52.813553",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "v3.6.2+gee407bd",
    "stdout_lines": [
        "v3.6.2+gee407bd"
    ]
}
META: role_complete for localhost

TASK [setup/helm : register temporary directory] *******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160 `" && echo ansible-tmp-1666395472.9273925-2426-11725826642160="` echo /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpf77mkb9n TO /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160/ /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395472.9273925-2426-11725826642160/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.y_up2pbj",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [setup/helm : check helm] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496 `" && echo ansible-tmp-1666395473.1308956-2452-151143983163496="` echo /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpo0rp6v1g TO /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496/ /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395473.1308956-2452-151143983163496/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1666395330.525418,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 88104,
        "charset": "unknown",
        "checksum": "4ef98189af928450906546c6afd8719399a4c181",
        "ctime": 1666395330.3114178,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360773,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1666395330.0304174,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 45109248,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/helm : Install helm] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Unzip helm archive] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Move helm binaries] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/helm : Test helm installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250 `" && echo ansible-tmp-1666395473.5493586-2487-28283687610250="` echo /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpdsl9bje4 TO /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250/ /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395473.5493586-2487-28283687610250/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.043878",
    "end": "2022-10-21 23:37:53.741342",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:53.697464",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "v3.6.2+gee407bd",
    "stdout_lines": [
        "v3.6.2+gee407bd"
    ]
}
META: role_complete for localhost

TASK [include_role : setup/vault] **********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:33

TASK [setup/vault : register temporary directory] ******************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868 `" && echo ansible-tmp-1666395473.8873882-2522-13489166095868="` echo /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpvc8abekx TO /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868/ /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395473.8873882-2522-13489166095868/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.5zgcd_3b",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [setup/vault : check vault] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142 `" && echo ansible-tmp-1666395474.0936203-2548-262085195231142="` echo /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpw4oeltqu TO /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142/ /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395474.0936203-2548-262085195231142/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/vault"
        }
    },
    "stat": {
        "atime": 1666395340.1764293,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 384416,
        "charset": "unknown",
        "checksum": "1a97c27b87ff109441f4631eaec50751e2864802",
        "ctime": 1666395339.943429,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360845,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1618938805.0,
        "nlink": 1,
        "path": "/root/bin/vault",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 196820366,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [setup/vault : Install vault client] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : create bin directory] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:32
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Unzip vault archive] ***************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:40
skipping: [localhost] => (item=vault)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "vault",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/vault : Test vault installation] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/vault/tasks/main.yaml:52
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743 `" && echo ansible-tmp-1666395475.2891426-2581-161609843865743="` echo /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpxacfl310 TO /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743/ /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395475.2891426-2581-161609843865743/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "vault",
        "version"
    ],
    "delta": "0:00:00.083620",
    "end": "2022-10-21 23:37:55.531199",
    "invocation": {
        "module_args": {
            "_raw_params": "vault version",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:55.447579",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Vault v1.7.1 (917142287996a005cb1ed9d96d00d06a0590e44e)",
    "stdout_lines": [
        "Vault v1.7.1 (917142287996a005cb1ed9d96d00d06a0590e44e)"
    ]
}
META: role_complete for localhost

TASK [include_role : setup/aws-cli] ********************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:41
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/aws-auth] *******************************************
task path: /home/bevel/platforms/shared/configuration/environment-setup.yaml:48
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [include_role : setup/flux] ***********************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:18
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: 

TASK [helm : register temporary directory] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174 `" && echo ansible-tmp-1666395476.3500016-2647-24346121758174="` echo /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmptex2ngk6 TO /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174/ /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395476.3500016-2647-24346121758174/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.ma00zuce",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [helm : check helm] *******************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458 `" && echo ansible-tmp-1666395476.5697134-2673-135033922485458="` echo /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp3jl_3jn9 TO /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458/ /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395476.5697134-2673-135033922485458/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/helm"
        }
    },
    "stat": {
        "atime": 1666395330.525418,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 88104,
        "charset": "unknown",
        "checksum": "4ef98189af928450906546c6afd8719399a4c181",
        "ctime": 1666395330.3114178,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360773,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1666395330.0304174,
        "nlink": 1,
        "path": "/root/bin/helm",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 45109248,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [helm : Install helm] *****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : Unzip helm archive] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:33
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:43
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : Move helm binaries] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:53
skipping: [localhost] => (item=helm)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "helm",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [helm : Test helm installation] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/helm/tasks/main.yaml:64
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163 `" && echo ansible-tmp-1666395477.0821857-2708-113290230110163="` echo /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp9oj32zdx TO /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163/ /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395477.0821857-2708-113290230110163/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "helm",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.039691",
    "end": "2022-10-21 23:37:57.261779",
    "invocation": {
        "module_args": {
            "_raw_params": "helm version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:57.222088",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "v3.6.2+gee407bd",
    "stdout_lines": [
        "v3.6.2+gee407bd"
    ]
}
META: role_complete for localhost

TASK [kubectl : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714 `" && echo ansible-tmp-1666395477.3450577-2741-139779692609714="` echo /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/tempfile.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpcyg1zvn3 TO /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714/AnsiballZ_tempfile.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714/ /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714/AnsiballZ_tempfile.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395477.3450577-2741-139779692609714/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "path": null,
            "prefix": "ansible.",
            "state": "directory",
            "suffix": ""
        }
    },
    "mode": "0700",
    "owner": "root",
    "path": "/tmp/ansible.1hqpobpa",
    "size": 0,
    "state": "directory",
    "uid": 0
}

TASK [kubectl : check kubectl] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399 `" && echo ansible-tmp-1666395477.5538983-2767-31287906388399="` echo /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/stat.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmppb_pu598 TO /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399/AnsiballZ_stat.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399/ /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399/AnsiballZ_stat.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395477.5538983-2767-31287906388399/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "invocation": {
        "module_args": {
            "checksum_algorithm": "sha1",
            "follow": false,
            "get_attributes": true,
            "get_checksum": true,
            "get_md5": false,
            "get_mime": true,
            "path": "/root/bin/kubectl"
        }
    },
    "stat": {
        "atime": 1666395323.52441,
        "attr_flags": "",
        "attributes": [],
        "block_size": 4096,
        "blocks": 83960,
        "charset": "unknown",
        "checksum": "371d59fce375bd7d74256c136280eeef732d7611",
        "ctime": 1666395323.3054097,
        "dev": 1048771,
        "device_type": 0,
        "executable": true,
        "exists": true,
        "gid": 0,
        "gr_name": "root",
        "inode": 11360682,
        "isblk": false,
        "ischr": false,
        "isdir": false,
        "isfifo": false,
        "isgid": false,
        "islnk": false,
        "isreg": true,
        "issock": false,
        "isuid": false,
        "mimetype": "unknown",
        "mode": "0755",
        "mtime": 1613566452.0,
        "nlink": 1,
        "path": "/root/bin/kubectl",
        "pw_name": "root",
        "readable": true,
        "rgrp": true,
        "roth": true,
        "rusr": true,
        "size": 42987520,
        "uid": 0,
        "version": null,
        "wgrp": false,
        "woth": false,
        "writeable": true,
        "wusr": true,
        "xgrp": true,
        "xoth": true,
        "xusr": true
    }
}

TASK [kubectl : Download kubectl binary] ***************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Unarchive kubernetes-client] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:31
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : create bin directory] ******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:39
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Copy kubectl binary to destination directory] ******************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:47
skipping: [localhost] => (item=kubectl)  => {
    "ansible_loop_var": "bin_item",
    "bin_item": "kubectl",
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [kubectl : Test kubectl installation] *************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:61
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287 `" && echo ansible-tmp-1666395477.9847434-2802-169445882750287="` echo /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpglqzq36b TO /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287/ /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395477.9847434-2802-169445882750287/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "cmd": [
        "kubectl",
        "version",
        "--client",
        "--short"
    ],
    "delta": "0:00:00.054396",
    "end": "2022-10-21 23:37:58.185364",
    "invocation": {
        "module_args": {
            "_raw_params": "kubectl version --client --short",
            "_uses_shell": false,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:58.130968",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Client Version: v1.19.8",
    "stdout_lines": [
        "Client Version: v1.19.8"
    ]
}

TASK [kubectl : Changing the current context namespace to default] *************
task path: /home/bevel/platforms/shared/configuration/roles/setup/kubectl/tasks/main.yaml:67
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380 `" && echo ansible-tmp-1666395478.3033733-2835-70475694134380="` echo /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp64gfy5dg TO /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380/ /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395478.3033733-2835-70475694134380/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "KUBECONFIG=/home/bevel/build/config kubectl config use-context minikube\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n",
    "delta": "0:00:00.101130",
    "end": "2022-10-21 23:37:58.549260",
    "invocation": {
        "module_args": {
            "_raw_params": "KUBECONFIG=/home/bevel/build/config kubectl config use-context minikube\nKUBECONFIG=/home/bevel/build/config kubectl config set-context --current --namespace=default\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:58.448130",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "Switched to context \"minikube\".\nContext \"minikube\" modified.",
    "stdout_lines": [
        "Switched to context \"minikube\".",
        "Context \"minikube\" modified."
    ]
}
META: role_complete for localhost

TASK [setup/flux : Install flux cli] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019 `" && echo ansible-tmp-1666395478.6254923-2876-140588650396019="` echo /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpf_lcsex6 TO /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019/ /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'FLUX_VERSION=0.30.2 /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395478.6254923-2876-140588650396019/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "curl -s https://fluxcd.io/install.sh | bash -s ~/bin\n",
    "delta": "0:00:02.334987",
    "end": "2022-10-21 23:38:01.099439",
    "invocation": {
        "module_args": {
            "_raw_params": "curl -s https://fluxcd.io/install.sh | bash -s ~/bin\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:37:58.764452",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "[INFO]  Downloading metadata https://api.github.com/repos/fluxcd/flux2/releases/tags/v0.30.2\n[INFO]  Using 0.30.2 as release\n[INFO]  Downloading hash https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_checksums.txt\n[INFO]  Downloading binary https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_linux_amd64.tar.gz\n[INFO]  Verifying binary download\n[INFO]  Installing flux to /root/bin/flux",
    "stdout_lines": [
        "[INFO]  Downloading metadata https://api.github.com/repos/fluxcd/flux2/releases/tags/v0.30.2",
        "[INFO]  Using 0.30.2 as release",
        "[INFO]  Downloading hash https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_checksums.txt",
        "[INFO]  Downloading binary https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_linux_amd64.tar.gz",
        "[INFO]  Verifying binary download",
        "[INFO]  Installing flux to /root/bin/flux"
    ]
}

TASK [setup/flux : Update the ssh host to known hosts] *************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919 `" && echo ansible-tmp-1666395481.1701505-2935-57128146099919="` echo /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpq_lle4dg TO /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919/ /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395481.1701505-2935-57128146099919/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "mkdir -p ~/.ssh/\nssh-keygen -R github.com\nssh-keyscan github.com >> ~/.ssh/known_hosts\n",
    "delta": "0:00:00.367114",
    "end": "2022-10-21 23:38:01.675448",
    "invocation": {
        "module_args": {
            "_raw_params": "mkdir -p ~/.ssh/\nssh-keygen -R github.com\nssh-keyscan github.com >> ~/.ssh/known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:38:01.308334",
    "stderr": "# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727"
    ],
    "stdout": "# Host github.com found: line 1\n# Host github.com found: line 2\n# Host github.com found: line 3\n/root/.ssh/known_hosts updated.\nOriginal contents retained as /root/.ssh/known_hosts.old",
    "stdout_lines": [
        "# Host github.com found: line 1",
        "# Host github.com found: line 2",
        "# Host github.com found: line 3",
        "/root/.ssh/known_hosts updated.",
        "Original contents retained as /root/.ssh/known_hosts.old"
    ]
}

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418 `" && echo ansible-tmp-1666395481.7948122-2967-28883049063418="` echo /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpcn5qtyfo TO /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418/ /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'KUBECONFIG=/home/bevel/build/config /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395481.7948122-2967-28883049063418/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "yes | ~/bin/flux bootstrap git --url=ssh://git@github.com/SynthNetics/bevel.git --branch=test2 --path=platforms/r3-corda/releases/dev --private-key-file=/home/bevel/build/gitops --namespace=flux-local\n",
    "delta": "0:00:08.505156",
    "end": "2022-10-21 23:38:10.445039",
    "invocation": {
        "module_args": {
            "_raw_params": "yes | ~/bin/flux bootstrap git --url=ssh://git@github.com/SynthNetics/bevel.git --branch=test2 --path=platforms/r3-corda/releases/dev --private-key-file=/home/bevel/build/gitops --namespace=flux-local\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:38:01.939883",
    "stderr": "► cloning branch \"test2\" from Git repository \"ssh://git@github.com/SynthNetics/bevel.git\"\n✔ cloned repository\n► generating component manifests\n✔ generated component manifests\n✔ component manifests are up to date\n✔ reconciled components\n► determining if source secret \"flux-local/flux-system\" exists\n► generating source secret\n✔ public key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtvwaiF3TXDHBO2+eFc+EhmG3Zp0rlFXHUnxEB2Z12VYJu4TP2Sa+IY4oMVtf58x+k4JRwCacgfMzS6Ur57kwtM7HXlfOiK6uUM20qvy6pDMtzflri0raikwyzm8y1HqjamC4imU+95dMVZ4FEXEOM7dGjbBERziLeiPFrZOzjyGI/RJTgQ4ryH65L889d6LhZEk9g9mXS2QtdKOlw4+EwtzE5xx58aeKBPYqZVdNNVZAMMQQjfN2RqR7D56mOQrOoPjTGELQPzwPlv/i7rHpIH1+XXc7YTZ5kM1j9RmQg7UAkan3zU7VZoW5+v1QepvS9sI2WMJtdYZmoGcMiyxp6bxJt7qmSlAORUBciu4E+tLH+ymKvOZtRjWFo6pkg69A9fWKqoz1t+mzQv8cLXp6M5E6E/wbGMcQy5sEvX/S2DSRkKS/8U2Qf/TQa5jnjbf3+gmvRXE4MPz1O0cOc1Kjr2MTPjvOtc5FvrMi64LjraMRYMAizCutlCetv9mqZtns=\n► applying source secret \"flux-local/flux-system\"\n✔ reconciled source secret\n► generating sync manifests\n✔ generated sync manifests\n✔ sync manifests are up to date\n► applying sync manifests\n✔ reconciled sync configuration\n◎ waiting for Kustomization \"flux-local/flux-local\" to be reconciled\n✔ Kustomization reconciled successfully\n► confirming components are healthy\n✔ helm-controller: deployment ready\n✔ kustomize-controller: deployment ready\n✔ notification-controller: deployment ready\n✔ source-controller: deployment ready\n✔ all components are healthy",
    "stderr_lines": [
        "► cloning branch \"test2\" from Git repository \"ssh://git@github.com/SynthNetics/bevel.git\"",
        "✔ cloned repository",
        "► generating component manifests",
        "✔ generated component manifests",
        "✔ component manifests are up to date",
        "✔ reconciled components",
        "► determining if source secret \"flux-local/flux-system\" exists",
        "► generating source secret",
        "✔ public key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtvwaiF3TXDHBO2+eFc+EhmG3Zp0rlFXHUnxEB2Z12VYJu4TP2Sa+IY4oMVtf58x+k4JRwCacgfMzS6Ur57kwtM7HXlfOiK6uUM20qvy6pDMtzflri0raikwyzm8y1HqjamC4imU+95dMVZ4FEXEOM7dGjbBERziLeiPFrZOzjyGI/RJTgQ4ryH65L889d6LhZEk9g9mXS2QtdKOlw4+EwtzE5xx58aeKBPYqZVdNNVZAMMQQjfN2RqR7D56mOQrOoPjTGELQPzwPlv/i7rHpIH1+XXc7YTZ5kM1j9RmQg7UAkan3zU7VZoW5+v1QepvS9sI2WMJtdYZmoGcMiyxp6bxJt7qmSlAORUBciu4E+tLH+ymKvOZtRjWFo6pkg69A9fWKqoz1t+mzQv8cLXp6M5E6E/wbGMcQy5sEvX/S2DSRkKS/8U2Qf/TQa5jnjbf3+gmvRXE4MPz1O0cOc1Kjr2MTPjvOtc5FvrMi64LjraMRYMAizCutlCetv9mqZtns=",
        "► applying source secret \"flux-local/flux-system\"",
        "✔ reconciled source secret",
        "► generating sync manifests",
        "✔ generated sync manifests",
        "✔ sync manifests are up to date",
        "► applying sync manifests",
        "✔ reconciled sync configuration",
        "◎ waiting for Kustomization \"flux-local/flux-local\" to be reconciled",
        "✔ Kustomization reconciled successfully",
        "► confirming components are healthy",
        "✔ helm-controller: deployment ready",
        "✔ kustomize-controller: deployment ready",
        "✔ notification-controller: deployment ready",
        "✔ source-controller: deployment ready",
        "✔ all components are healthy"
    ],
    "stdout": "\u001b[?25l\u001b[2K\r\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m █\n\u001b[1A\u001b[2K\r\u001b[2K\r\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█\n\u001b[1A\u001b[2K\r\u001b[2K\r\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█\n\u001b[1A\u001b[2K\r\u001b[2K\r\u001b[2mPlease give the key access to your repository\u001b[0m\u001b[2m:\u001b[0m y\n\u001b[?25h",
    "stdout_lines": [
        "\u001b[?25l\u001b[2K",
        "\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m █",
        "\u001b[1A\u001b[2K",
        "\u001b[2K",
        "\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█",
        "\u001b[1A\u001b[2K",
        "\u001b[2K",
        "\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█",
        "\u001b[1A\u001b[2K",
        "\u001b[2K",
        "\u001b[2mPlease give the key access to your repository\u001b[0m\u001b[2m:\u001b[0m y",
        "\u001b[?25h"
    ]
}
META: role_complete for localhost

TASK [aws-cli : register temporary directory] **********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:8
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : check aws cli] *************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:15
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : download aws cli] **********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : extract aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:31
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [create bin directory] ****************************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:40
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : install aws cli] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:50
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-cli : configuring aws] ***********************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-cli/tasks/main.yaml:58
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: 

TASK [aws-auth : register temporary directory] *********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:8
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : check aws-authenticator] **************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:15
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : create bin directory] *****************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:22
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Install aws-authenticator] ************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:30
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [aws-auth : Test Kubernetes connection] ***********************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/aws-auth/tasks/main.yaml:41
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: 

TASK [setup/flux : Install flux cli] *******************************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:8
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998 `" && echo ansible-tmp-1666395490.9929261-3029-197662848627998="` echo /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp6inqtd8b TO /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998/ /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'FLUX_VERSION=0.30.2 /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395490.9929261-3029-197662848627998/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "curl -s https://fluxcd.io/install.sh | bash -s ~/bin\n",
    "delta": "0:00:02.780407",
    "end": "2022-10-21 23:38:13.918831",
    "invocation": {
        "module_args": {
            "_raw_params": "curl -s https://fluxcd.io/install.sh | bash -s ~/bin\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:38:11.138424",
    "stderr": "",
    "stderr_lines": [],
    "stdout": "[INFO]  Downloading metadata https://api.github.com/repos/fluxcd/flux2/releases/tags/v0.30.2\n[INFO]  Using 0.30.2 as release\n[INFO]  Downloading hash https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_checksums.txt\n[INFO]  Downloading binary https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_linux_amd64.tar.gz\n[INFO]  Verifying binary download\n[INFO]  Installing flux to /root/bin/flux",
    "stdout_lines": [
        "[INFO]  Downloading metadata https://api.github.com/repos/fluxcd/flux2/releases/tags/v0.30.2",
        "[INFO]  Using 0.30.2 as release",
        "[INFO]  Downloading hash https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_checksums.txt",
        "[INFO]  Downloading binary https://github.com/fluxcd/flux2/releases/download/v0.30.2/flux_0.30.2_linux_amd64.tar.gz",
        "[INFO]  Verifying binary download",
        "[INFO]  Installing flux to /root/bin/flux"
    ]
}

TASK [setup/flux : Update the ssh host to known hosts] *************************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:14
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433 `" && echo ansible-tmp-1666395494.0094159-3088-257377846657433="` echo /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp_nwly1qx TO /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433/ /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395494.0094159-3088-257377846657433/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "mkdir -p ~/.ssh/\nssh-keygen -R github.com\nssh-keyscan github.com >> ~/.ssh/known_hosts\n",
    "delta": "0:00:00.346057",
    "end": "2022-10-21 23:38:14.520875",
    "invocation": {
        "module_args": {
            "_raw_params": "mkdir -p ~/.ssh/\nssh-keygen -R github.com\nssh-keyscan github.com >> ~/.ssh/known_hosts\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:38:14.174818",
    "stderr": "# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727\n# github.com:22 SSH-2.0-babeld-2f5f2727",
    "stderr_lines": [
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727",
        "# github.com:22 SSH-2.0-babeld-2f5f2727"
    ],
    "stdout": "# Host github.com found: line 1\n# Host github.com found: line 2\n# Host github.com found: line 3\n/root/.ssh/known_hosts updated.\nOriginal contents retained as /root/.ssh/known_hosts.old",
    "stdout_lines": [
        "# Host github.com found: line 1",
        "# Host github.com found: line 2",
        "# Host github.com found: line 3",
        "/root/.ssh/known_hosts updated.",
        "Original contents retained as /root/.ssh/known_hosts.old"
    ]
}

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [setup/flux : Install flux cli and bootstrap flux v2] *********************
task path: /home/bevel/platforms/shared/configuration/roles/setup/flux/tasks/main.yaml:40
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513 `" && echo ansible-tmp-1666395494.64087-3120-15052723894513="` echo /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpxdeolefl TO /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513/ /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'KUBECONFIG=/home/bevel/build/config /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395494.64087-3120-15052723894513/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "cmd": "yes | ~/bin/flux bootstrap git --url=ssh://git@github.com/SynthNetics/bevel.git --branch=local --path=platforms/r3-corda/releases/dev --private-key-file=/home/bevel/build/gitops --namespace=flux-local\n",
    "delta": "0:00:29.002409",
    "end": "2022-10-21 23:38:43.789717",
    "invocation": {
        "module_args": {
            "_raw_params": "yes | ~/bin/flux bootstrap git --url=ssh://git@github.com/SynthNetics/bevel.git --branch=local --path=platforms/r3-corda/releases/dev --private-key-file=/home/bevel/build/gitops --namespace=flux-local\n",
            "_uses_shell": true,
            "argv": null,
            "chdir": null,
            "creates": null,
            "executable": null,
            "removes": null,
            "stdin": null,
            "stdin_add_newline": true,
            "strip_empty_ends": true,
            "warn": false
        }
    },
    "msg": "",
    "rc": 0,
    "start": "2022-10-21 23:38:14.787308",
    "stderr": "► cloning branch \"local\" from Git repository \"ssh://git@github.com/SynthNetics/bevel.git\"\n✔ cloned repository\n► generating component manifests\n✔ generated component manifests\n✔ component manifests are up to date\n✔ reconciled components\n► determining if source secret \"flux-local/flux-system\" exists\n► generating source secret\n✔ public key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtvwaiF3TXDHBO2+eFc+EhmG3Zp0rlFXHUnxEB2Z12VYJu4TP2Sa+IY4oMVtf58x+k4JRwCacgfMzS6Ur57kwtM7HXlfOiK6uUM20qvy6pDMtzflri0raikwyzm8y1HqjamC4imU+95dMVZ4FEXEOM7dGjbBERziLeiPFrZOzjyGI/RJTgQ4ryH65L889d6LhZEk9g9mXS2QtdKOlw4+EwtzE5xx58aeKBPYqZVdNNVZAMMQQjfN2RqR7D56mOQrOoPjTGELQPzwPlv/i7rHpIH1+XXc7YTZ5kM1j9RmQg7UAkan3zU7VZoW5+v1QepvS9sI2WMJtdYZmoGcMiyxp6bxJt7qmSlAORUBciu4E+tLH+ymKvOZtRjWFo6pkg69A9fWKqoz1t+mzQv8cLXp6M5E6E/wbGMcQy5sEvX/S2DSRkKS/8U2Qf/TQa5jnjbf3+gmvRXE4MPz1O0cOc1Kjr2MTPjvOtc5FvrMi64LjraMRYMAizCutlCetv9mqZtns=\n► applying source secret \"flux-local/flux-system\"\n✔ reconciled source secret\n► generating sync manifests\n✔ generated sync manifests\n✔ sync manifests are up to date\n► applying sync manifests\n✔ reconciled sync configuration\n◎ waiting for Kustomization \"flux-local/flux-local\" to be reconciled\n✔ Kustomization reconciled successfully\n► confirming components are healthy\n✔ helm-controller: deployment ready\n✔ kustomize-controller: deployment ready\n✔ notification-controller: deployment ready\n✔ source-controller: deployment ready\n✔ all components are healthy",
    "stderr_lines": [
        "► cloning branch \"local\" from Git repository \"ssh://git@github.com/SynthNetics/bevel.git\"",
        "✔ cloned repository",
        "► generating component manifests",
        "✔ generated component manifests",
        "✔ component manifests are up to date",
        "✔ reconciled components",
        "► determining if source secret \"flux-local/flux-system\" exists",
        "► generating source secret",
        "✔ public key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCtvwaiF3TXDHBO2+eFc+EhmG3Zp0rlFXHUnxEB2Z12VYJu4TP2Sa+IY4oMVtf58x+k4JRwCacgfMzS6Ur57kwtM7HXlfOiK6uUM20qvy6pDMtzflri0raikwyzm8y1HqjamC4imU+95dMVZ4FEXEOM7dGjbBERziLeiPFrZOzjyGI/RJTgQ4ryH65L889d6LhZEk9g9mXS2QtdKOlw4+EwtzE5xx58aeKBPYqZVdNNVZAMMQQjfN2RqR7D56mOQrOoPjTGELQPzwPlv/i7rHpIH1+XXc7YTZ5kM1j9RmQg7UAkan3zU7VZoW5+v1QepvS9sI2WMJtdYZmoGcMiyxp6bxJt7qmSlAORUBciu4E+tLH+ymKvOZtRjWFo6pkg69A9fWKqoz1t+mzQv8cLXp6M5E6E/wbGMcQy5sEvX/S2DSRkKS/8U2Qf/TQa5jnjbf3+gmvRXE4MPz1O0cOc1Kjr2MTPjvOtc5FvrMi64LjraMRYMAizCutlCetv9mqZtns=",
        "► applying source secret \"flux-local/flux-system\"",
        "✔ reconciled source secret",
        "► generating sync manifests",
        "✔ generated sync manifests",
        "✔ sync manifests are up to date",
        "► applying sync manifests",
        "✔ reconciled sync configuration",
        "◎ waiting for Kustomization \"flux-local/flux-local\" to be reconciled",
        "✔ Kustomization reconciled successfully",
        "► confirming components are healthy",
        "✔ helm-controller: deployment ready",
        "✔ kustomize-controller: deployment ready",
        "✔ notification-controller: deployment ready",
        "✔ source-controller: deployment ready",
        "✔ all components are healthy"
    ],
    "stdout": "\u001b[?25l\u001b[2K\r\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m █\n\u001b[1A\u001b[2K\r\u001b[2K\r\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█\n\u001b[1A\u001b[2K\r\u001b[2K\r\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█\n\u001b[1A\u001b[2K\r\u001b[2K\r\u001b[2mPlease give the key access to your repository\u001b[0m\u001b[2m:\u001b[0m y\n\u001b[?25h",
    "stdout_lines": [
        "\u001b[?25l\u001b[2K",
        "\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m █",
        "\u001b[1A\u001b[2K",
        "\u001b[2K",
        "\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█",
        "\u001b[1A\u001b[2K",
        "\u001b[2K",
        "\u001b[1m\u001b[34m?\u001b[0m \u001b[1mPlease give the key access to your repository\u001b[0m? \u001b[2m[y/N]\u001b[0m y█",
        "\u001b[1A\u001b[2K",
        "\u001b[2K",
        "\u001b[2mPlease give the key access to your repository\u001b[0m\u001b[2m:\u001b[0m y",
        "\u001b[?25h"
    ]
}
META: role_complete for localhost

TASK [Prepare nodes and clients ports for ambassador] **************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:34
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "organizationItem",
    "changed": false,
    "organizationItem": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/ambassador] *****************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:43
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [include_role : setup/haproxy-ingress] ************************************
task path: /home/bevel/platforms/shared/configuration/kubernetes-env-setup.yaml:51
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create namespace and Vault auth for each organization] *******************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:29
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Setup Vault Kubernetes for each organization] ****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:40
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create storageclass for each organization] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:52
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create CA server for each organization] **********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:63
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create generate_crypto.sh for each organization] *************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:81
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [pause] *******************************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:91
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CA tools for each organization] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:96
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create CA tools for each organization] ***********************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:113
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create configtx.yaml] ****************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:132
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create channel artifacts for all channels] *******************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:139
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create genesis block] ****************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:149
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create all orderers] *****************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:158
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create all peers] ********************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:178
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "item",
    "changed": false,
    "item": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}

TASK [Create all create-channel jobs] ******************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:198
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create all join-channel jobs] ********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:209
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create all anchor-peer jobs] *********************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:220
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Create CLI pod for each peer with it enabled] ****************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/deploy-network.yaml:230
skipping: [localhost] => (item={'organization': None, 'name': 'supplychain', 'country': 'UK', 'state': 'London', 'location': 'London', 'subject': 'CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB', 'type': 'doorman-nms-notary', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'test2', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'doorman': {'name': 'doorman', 'subject': 'CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'doorman', 'ports': {'nodePort': 30030, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'nms': {'name': 'networkmap', 'subject': 'CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE', 'db_subject': '/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB', 'type': 'networkmap', 'ports': {'nodePort': 30040, 'servicePort': 8080, 'targetPort': 8080}, 'tls': 'on'}, 'notary': {'name': 'notary', 'subject': 'O=Notary,OU=Notary,L=London,C=GB', 'type': 'notary', 'validating': False, 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15010}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}}}})  => {
    "ansible_loop_var": "org",
    "changed": false,
    "org": {
        "cloud_provider": "minikube",
        "country": "UK",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "test2",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "London",
        "name": "supplychain",
        "organization": null,
        "services": {
            "doorman": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "doorman",
                "ports": {
                    "nodePort": 30030,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE",
                "tls": "on",
                "type": "doorman"
            },
            "nms": {
                "db_subject": "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB",
                "name": "networkmap",
                "ports": {
                    "nodePort": 30040,
                    "servicePort": 8080,
                    "targetPort": 8080
                },
                "subject": "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE",
                "tls": "on",
                "type": "networkmap"
            },
            "notary": {
                "dbtcp": {
                    "port": 9101,
                    "targetPort": 1521
                },
                "dbweb": {
                    "port": 8080,
                    "targetPort": 81
                },
                "name": "notary",
                "p2p": {
                    "ambassador": 15010,
                    "port": 10002,
                    "targetPort": 10002
                },
                "rpc": {
                    "port": 10003,
                    "targetPort": 10003
                },
                "rpcadmin": {
                    "port": 10005,
                    "targetPort": 10005
                },
                "subject": "O=Notary,OU=Notary,L=London,C=GB",
                "type": "notary",
                "validating": false
            }
        },
        "state": "London",
        "subject": "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB",
        "type": "doorman-nms-notary",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
skipping: [localhost] => (item={'organization': None, 'name': 'manufacturer', 'country': 'CH', 'state': 'Zurich', 'location': 'Zurich', 'subject': 'O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH', 'type': 'node', 'external_url_suffix': 'develop.local.com', 'cloud_provider': 'minikube', 'k8s': {'context': 'minikube', 'config_file': '/home/bevel/build/config'}, 'vault': {'url': 'http://192.168.1.21:8217', 'root_token': 's.WtD9absblrkGSMkMYh3OlbzD'}, 'gitops': {'git_protocol': 'ssh', 'git_url': 'ssh://git@github.com/SynthNetics/bevel.git', 'branch': 'local', 'release_dir': 'platforms/r3-corda/releases/dev', 'chart_source': 'platforms/r3-corda/charts', 'git_repo': 'github.com/SynthNetics/bevel.git', 'username': 'SynthNetics', 'password': 'git_access_token', 'email': 'git@email.com', 'private_key': '/home/bevel/build/gitops'}, 'services': {'peers': [{'peer': None, 'name': 'manufacturer', 'subject': 'O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH', 'type': 'node', 'p2p': {'port': 10002, 'targetPort': 10002, 'ambassador': 15020}, 'rpc': {'port': 10003, 'targetPort': 10003}, 'rpcadmin': {'port': 10005, 'targetPort': 10005}, 'dbtcp': {'port': 9101, 'targetPort': 1521}, 'dbweb': {'port': 8080, 'targetPort': 81}, 'springboot': {'targetPort': 20001, 'port': 20001}, 'expressapi': {'targetPort': 3000, 'port': 3000}}]}})  => {
    "ansible_loop_var": "org",
    "changed": false,
    "org": {
        "cloud_provider": "minikube",
        "country": "CH",
        "external_url_suffix": "develop.local.com",
        "gitops": {
            "branch": "local",
            "chart_source": "platforms/r3-corda/charts",
            "email": "git@email.com",
            "git_protocol": "ssh",
            "git_repo": "github.com/SynthNetics/bevel.git",
            "git_url": "ssh://git@github.com/SynthNetics/bevel.git",
            "password": "git_access_token",
            "private_key": "/home/bevel/build/gitops",
            "release_dir": "platforms/r3-corda/releases/dev",
            "username": "SynthNetics"
        },
        "k8s": {
            "config_file": "/home/bevel/build/config",
            "context": "minikube"
        },
        "location": "Zurich",
        "name": "manufacturer",
        "organization": null,
        "services": {
            "peers": [
                {
                    "dbtcp": {
                        "port": 9101,
                        "targetPort": 1521
                    },
                    "dbweb": {
                        "port": 8080,
                        "targetPort": 81
                    },
                    "expressapi": {
                        "port": 3000,
                        "targetPort": 3000
                    },
                    "name": "manufacturer",
                    "p2p": {
                        "ambassador": 15020,
                        "port": 10002,
                        "targetPort": 10002
                    },
                    "peer": null,
                    "rpc": {
                        "port": 10003,
                        "targetPort": 10003
                    },
                    "rpcadmin": {
                        "port": 10005,
                        "targetPort": 10005
                    },
                    "springboot": {
                        "port": 20001,
                        "targetPort": 20001
                    },
                    "subject": "O=Manufacturer,OU=Manufacturer,L=47.38/8.54/Zurich,C=CH",
                    "type": "node"
                }
            ]
        },
        "state": "Zurich",
        "subject": "O=Manufacturer,OU=Manufacturer,L=Zurich,C=CH",
        "type": "node",
        "vault": {
            "root_token": "s.WtD9absblrkGSMkMYh3OlbzD",
            "url": "http://192.168.1.21:8217"
        }
    },
    "skip_reason": "Conditional result was False"
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/chaincode-ops.yaml:26
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Install chaincode] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/chaincode-ops.yaml:31
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Instantiate chaincode] ***************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/chaincode-ops.yaml:42
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Approve chaincode] *******************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/chaincode-ops.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Commit chaincode] ********************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/chaincode-ops.yaml:60
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Invoke chaincode] ********************************************************
task path: /home/bevel/platforms/hyperledger-fabric/configuration/chaincode-ops.yaml:72
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: ran handlers
META: ran handlers

PLAY [ansible_provisioners] ****************************************************
META: ran handlers

TASK [Remove build directory] **************************************************
task path: /home/bevel/platforms/r3-corda/configuration/deploy-network.yaml:16
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463 `" && echo ansible-tmp-1666395525.299494-3215-258322286623463="` echo /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpjfta5591 TO /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463/ /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395525.299494-3215-258322286623463/ > /dev/null 2>&1 && sleep 0'
changed: [localhost] => {
    "changed": true,
    "diff": {
        "after": {
            "path": "./build",
            "state": "absent"
        },
        "before": {
            "path": "./build",
            "path_content": {
                "directories": [
                    "./build/corda",
                    "./build/corda/cordarootca",
                    "./build/corda/cordadoormanca",
                    "./build/corda/mongorootca",
                    "./build/corda/mongodbca",
                    "./build/corda/cordanetworkmap",
                    "./build/corda/notary"
                ],
                "files": [
                    "./build/corda/cordarootca/keys.jks",
                    "./build/corda/cordarootca/cordarootca.pem",
                    "./build/corda/cordarootca/cordarootca.key",
                    "./build/corda/cordadoormanca/tempkeys.jks",
                    "./build/corda/cordadoormanca/keys.jks",
                    "./build/corda/mongorootca/tempmongoCA.crt",
                    "./build/corda/mongorootca/mongoCA.crt",
                    "./build/corda/mongodbca/tempmongodb-doorman.pem",
                    "./build/corda/mongodbca/mongodb-doorman.pem",
                    "./build/corda/mongodbca/tempmongodb-networkmap.pem",
                    "./build/corda/mongodbca/mongodb-networkmap.pem",
                    "./build/corda/cordanetworkmap/tempkeys.jks",
                    "./build/corda/cordanetworkmap/keys.jks"
                ]
            },
            "state": "directory"
        }
    },
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "./build",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "absent",
            "unsafe_writes": false
        }
    },
    "path": "./build",
    "state": "absent"
}

TASK [Create Storage Class] ****************************************************
task path: /home/bevel/platforms/r3-corda/configuration/deploy-network.yaml:23

TASK [create/storageclass : set_fact] ******************************************
task path: /home/bevel/platforms/r3-corda/configuration/roles/create/storageclass/tasks/main.yaml:11
ok: [localhost] => {
    "ansible_facts": {
        "cloud_provider": "minikube"
    },
    "changed": false
}

TASK [Check if storageclass exists] ********************************************
task path: /home/bevel/platforms/r3-corda/configuration/roles/create/storageclass/tasks/main.yaml:15
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info

TASK [/home/bevel/platforms/r3-corda/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass minikubestorageclass is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:13
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493 `" && echo ansible-tmp-1666395525.757073-3247-215057223021493="` echo /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493 `" ) && sleep 0'
redirecting (type: modules) ansible.builtin.k8s_info to kubernetes.core.k8s_info
Loading collection cloud.common from /usr/local/lib/python3.8/dist-packages/ansible_collections/cloud/common
Using module file /usr/local/lib/python3.8/dist-packages/ansible_collections/kubernetes/core/plugins/modules/k8s_info.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpxdv7gh90 TO /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493/AnsiballZ_k8s_info.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493/ /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493/AnsiballZ_k8s_info.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395525.757073-3247-215057223021493/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "api_found": true,
    "changed": false,
    "invocation": {
        "module_args": {
            "api_key": null,
            "api_version": "v1",
            "ca_cert": null,
            "client_cert": null,
            "client_key": null,
            "context": "minikube",
            "field_selectors": [],
            "host": null,
            "impersonate_groups": null,
            "impersonate_user": null,
            "kind": "StorageClass",
            "kubeconfig": "/home/bevel/build/config",
            "label_selectors": [],
            "name": "minikubestorageclass",
            "namespace": null,
            "no_proxy": null,
            "password": null,
            "persist_config": null,
            "proxy": null,
            "proxy_headers": null,
            "username": null,
            "validate_certs": null,
            "wait": false,
            "wait_condition": null,
            "wait_sleep": 5,
            "wait_timeout": 120
        }
    },
    "resources": [
        {
            "apiVersion": "storage.k8s.io/v1",
            "kind": "StorageClass",
            "metadata": {
                "creationTimestamp": "2022-10-21T23:38:38Z",
                "labels": {
                    "kustomize.toolkit.fluxcd.io/name": "flux-local",
                    "kustomize.toolkit.fluxcd.io/namespace": "flux-local"
                },
                "managedFields": [
                    {
                        "apiVersion": "storage.k8s.io/v1",
                        "fieldsType": "FieldsV1",
                        "fieldsV1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:kustomize.toolkit.fluxcd.io/name": {},
                                    "f:kustomize.toolkit.fluxcd.io/namespace": {}
                                }
                            },
                            "f:parameters": {
                                "f:encrypted": {}
                            },
                            "f:provisioner": {},
                            "f:reclaimPolicy": {},
                            "f:volumeBindingMode": {}
                        },
                        "manager": "kustomize-controller",
                        "operation": "Apply",
                        "time": "2022-10-21T23:38:38Z"
                    }
                ],
                "name": "minikubestorageclass",
                "resourceVersion": "4116576",
                "uid": "53ce00f7-5273-4635-869b-df8d5b2d0499"
            },
            "parameters": {
                "encrypted": "true"
            },
            "provisioner": "k8s.io/minikube-hostpath",
            "reclaimPolicy": "Delete",
            "volumeBindingMode": "Immediate"
        }
    ]
}

TASK [/home/bevel/platforms/r3-corda/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass minikubestorageclass] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:23
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/home/bevel/platforms/r3-corda/configuration/../../shared/configuration/roles/check/k8_component : Check StorageClass minikubestorageclass is created] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:38
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [/home/bevel/platforms/r3-corda/configuration/../../shared/configuration/roles/check/k8_component : Wait for StorageClass minikubestorageclass] ***
task path: /home/bevel/platforms/shared/configuration/roles/check/k8_component/tasks/main.yaml:51
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}
META: role_complete for localhost

TASK [create/storageclass : Set the storageclass check result to a local variable] ***
task path: /home/bevel/platforms/r3-corda/configuration/roles/create/storageclass/tasks/main.yaml:24
ok: [localhost] => {
    "ansible_facts": {
        "storageclass_state": {
            "api_found": true,
            "changed": false,
            "failed": false,
            "resources": [
                {
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "creationTimestamp": "2022-10-21T23:38:38Z",
                        "labels": {
                            "kustomize.toolkit.fluxcd.io/name": "flux-local",
                            "kustomize.toolkit.fluxcd.io/namespace": "flux-local"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:kustomize.toolkit.fluxcd.io/name": {},
                                            "f:kustomize.toolkit.fluxcd.io/namespace": {}
                                        }
                                    },
                                    "f:parameters": {
                                        "f:encrypted": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "kustomize-controller",
                                "operation": "Apply",
                                "time": "2022-10-21T23:38:38Z"
                            }
                        ],
                        "name": "minikubestorageclass",
                        "resourceVersion": "4116576",
                        "uid": "53ce00f7-5273-4635-869b-df8d5b2d0499"
                    },
                    "parameters": {
                        "encrypted": "true"
                    },
                    "provisioner": "k8s.io/minikube-hostpath",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "Immediate"
                }
            ]
        }
    },
    "changed": false
}

TASK [Create storageclass] *****************************************************
task path: /home/bevel/platforms/r3-corda/configuration/roles/create/storageclass/tasks/main.yaml:28
skipping: [localhost] => {
    "changed": false,
    "skip_reason": "Conditional result was False"
}

TASK [Push the created deployment files to repository] *************************
task path: /home/bevel/platforms/r3-corda/configuration/roles/create/storageclass/tasks/main.yaml:39

TASK [/home/bevel/platforms/r3-corda/configuration/../../shared/configuration/roles/git_push : Check if directory: /home/bevel/platforms/r3-corda/configuration/../../../ exists] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:9
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095 `" && echo ansible-tmp-1666395527.2563062-3286-267386386098095="` echo /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/file.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmp2k0_ixnp TO /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095/AnsiballZ_file.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095/ /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095/AnsiballZ_file.py && sleep 0'
<localhost> EXEC /bin/sh -c 'rm -f -r /root/.ansible/tmp/ansible-tmp-1666395527.2563062-3286-267386386098095/ > /dev/null 2>&1 && sleep 0'
ok: [localhost] => {
    "changed": false,
    "diff": {
        "after": {
            "path": "/home/bevel/platforms/r3-corda/configuration/../../../"
        },
        "before": {
            "path": "/home/bevel/platforms/r3-corda/configuration/../../../"
        }
    },
    "gid": 0,
    "group": "root",
    "invocation": {
        "module_args": {
            "_diff_peek": null,
            "_original_basename": null,
            "access_time": null,
            "access_time_format": "%Y%m%d%H%M.%S",
            "attributes": null,
            "follow": true,
            "force": false,
            "group": null,
            "mode": null,
            "modification_time": null,
            "modification_time_format": "%Y%m%d%H%M.%S",
            "owner": null,
            "path": "/home/bevel/platforms/r3-corda/configuration/../../../",
            "recurse": false,
            "selevel": null,
            "serole": null,
            "setype": null,
            "seuser": null,
            "src": null,
            "state": "directory",
            "unsafe_writes": false
        }
    },
    "mode": "0755",
    "owner": "root",
    "path": "/home/bevel/platforms/r3-corda/configuration/../../../",
    "size": 506,
    "state": "directory",
    "uid": 0
}

TASK [/home/bevel/platforms/r3-corda/configuration/../../shared/configuration/roles/git_push : Execute git push for ssh] ***
task path: /home/bevel/platforms/shared/configuration/roles/git_push/tasks/main.yaml:15
<localhost> ESTABLISH LOCAL CONNECTION FOR USER: root
<localhost> EXEC /bin/sh -c 'echo ~root && sleep 0'
<localhost> EXEC /bin/sh -c '( umask 77 && mkdir -p "` echo /root/.ansible/tmp `"&& mkdir "` echo /root/.ansible/tmp/ansible-tmp-1666395527.4919093-3312-235494151746356 `" && echo ansible-tmp-1666395527.4919093-3312-235494151746356="` echo /root/.ansible/tmp/ansible-tmp-1666395527.4919093-3312-235494151746356 `" ) && sleep 0'
Using module file /usr/local/lib/python3.8/dist-packages/ansible/modules/command.py
<localhost> PUT /root/.ansible/tmp/ansible-local-17606q6arae2/tmpd1lep3mt TO /root/.ansible/tmp/ansible-tmp-1666395527.4919093-3312-235494151746356/AnsiballZ_command.py
<localhost> EXEC /bin/sh -c 'chmod u+x /root/.ansible/tmp/ansible-tmp-1666395527.4919093-3312-235494151746356/ /root/.ansible/tmp/ansible-tmp-1666395527.4919093-3312-235494151746356/AnsiballZ_command.py && sleep 0'
<localhost> EXEC /bin/sh -c '/usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1666395527.4919093-3312-235494151746356/AnsiballZ_command.py && sleep 0'
